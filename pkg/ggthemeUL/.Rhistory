ul_pal <- function(palette = "primary", neutralColor = "white", reverse = FALSE, ...) {
neutralColor <- ifelse(neutralColor %in% attr(ul_color(), "colorNames"), yes = ul_color(neutralColor), no = neutralColor)
ul_palettes <- list(
`primary` = c("#0033a0", "#0082C0", "#00B1AC", "#00694E",
"#EACE12", "#CB511C", "#9A2F31", "#C43788"),
`cold` = c("#0033a0", "#0082C0", "#00B1AC", "#00694E"),
`warm` = c("#EACE12", "#CB511C", "#9A2F31", "#C43788"),
`red`     = c("#F9D6D4", "#E03127"),
`antracit` = c("#DEDEDE", "#58595b"),
`medium`     = c("#EDEEEE", "#A7A8AA"),
`darkblue`   = c("#CCD6EC","#0033a0"),
`navyblue`   = c("#CCE6F2", "#0082C0"),
`turquoise`   = c("#CCEFEE", "#00B1AC"),
`green`   = c("#CCE1DC", "#00694E"),
`yellow`   = c("#FBF5D0", "#EACE12"),
`orange`   = c("#F5DCD2", "#CB511C"),
`burgundy`   = c("#EBD5D6", "#9A2F31"),
`pink`   = c("#F3D7E7", "#C43788"),
`redW`     = c(neutralColor, "#E03127"),
`antracitW` = c(neutralColor, "#58595b"),
`mediumW`     = c(neutralColor, "#A7A8AA"),
`darkblueW`   = c(neutralColor, "#0033a0"),
`navyblueW`   = c(neutralColor, "#0082C0"),
`turquoiseW`   = c(neutralColor, "#00B1AC"),
`greenW`   = c(neutralColor,"#00694E"),
`yellow`   = c(neutralColor,"#EACE12"),
`orangeW`   = c(neutralColor, "#CB511C"),
`burgundyW`   = c(neutralColor, "#9A2F31"),
`pinkW`   = c(neutralColor, "#C43788"),
`redBlue`   = c("#9A2F31", neutralColor, "#0082C0"),
`redGreen`   = c("#9A2F31", neutralColor, "#00694E"),
`blueTurquise`   = c("#0082C0", neutralColor, "#00B1AC"),
`blueYellow`   = c("#0082C0", neutralColor, "#EACE12")
)
pal <- ul_palettes[[palette]]
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
basicChartCont
basicChartCont <- ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1)) +
labs(x = "Age (years)",
y = "Height (cm)",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
color = "Weight")
basicChartCont
ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5)
ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1))
ul_color("transparent")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
strip.text.x = element_text(colour = "#58595b"),
plot.caption = element_text(hjust = 1),
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
#legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = legend.background,
legend.key = legend.key,
#text elements
strip.text.x = strip.text.x,
legend.position =  legend.position,
legend.title = legend.title,
axis.title = axis.title,
plot.title = plot.title,
plot.subtitle = plot.subtitle,
plot.caption = plot.caption,
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1))
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
strip.text.x = element_text(colour = "#58595b"),
plot.caption = element_text(hjust = 1),
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
#legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = legend.background,
legend.key = legend.key,
#text elements
strip.text.x = strip.text.x,
legend.position =  legend.position,
legend.title = legend.title,
axis.title = axis.title,
plot.title = plot.title,
plot.subtitle = plot.subtitle,
plot.caption = plot.caption,
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1))
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
strip.text.x = element_text(colour = "#58595b"),
plot.caption = element_text(hjust = 1),
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
legend.background = element_rect(fill="transparent", colour="transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = legend.background,
legend.key = legend.key,
#text elements
strip.text.x = strip.text.x,
legend.position =  legend.position,
legend.title = legend.title,
axis.title = axis.title,
plot.title = plot.title,
plot.subtitle = plot.subtitle,
plot.caption = plot.caption,
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1))
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
strip.text.x = element_text(colour = "#58595b"),
plot.caption = element_text(hjust = 1),
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
legend.background = element_rect(fill="transparent", colour="transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = legend.background,
legend.key = legend.key,
#text elements
strip.text.x = strip.text.x,
legend.position =  legend.position,
legend.title = legend.title,
axis.title = axis.title,
plot.title = plot.title,
plot.subtitle = plot.subtitle,
plot.caption = plot.caption,
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
basicChartCont <- ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1)) +
labs(x = "Age (years)",
y = "Height (cm)",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
color = "Weight")
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE, values = c(0, 0.8, 1))
basicChartCont
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
basicChartCont <- ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1)) +
labs(x = "Age (years)",
y = "Height (cm)",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
color = "Weight")
basicChartCont
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
library(ggthemeUL)
ul_color("red")
ul_color()
ul_color()
library(rcmdcheck)
devtools::build_manual()
rlang::last_trace()
devtools::build_manual()
library(ggthemeUL)
devtools::build_manual()
devtools::document()
rm(list = c("scale_color_ul", "scale_fill_ul", "theme_ul", "ul_color", "ul_pal"))
devtools::document()
library(ggthemeUL)
devtools::document()
getwd
getwd()
setwd("C:/Users/marss/Dropbox/FDV/multiUS/multiUSrForge/pkg/ggthemeUL")
devtools::document()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(knitr)
opts_chunk$set(fig.align = 'center',
fig.show = 'hold', fig.width = 7, fig.height = 5)
options(warnPartialMatchArgs = FALSE,
tibble.print.max = 4,
tibble.print.min = 4,
dplyr.summarise.inform = FALSE)
# install.packages("ggthemeUL", repos="http://R-Forge.R-project.org")
library(ggthemeUL)
library(ggplot2)
library(scales)
primaryColors <- c(
`red`     = "#E03127",
`antracit` = "#58595b",
`medium`     = "#A7A8AA",
`lajt`    = "#E8E9EA"
)
for (i in seq_along(primaryColors)) {
cat('<div style="width: 100px; height: 100px; background-color:', primaryColors[i],
'; display: flex; justify-content: center; align-items: center; color: white; margin: 10px; display: inline-block;">',
names(primaryColors)[i], "<br>", primaryColors[i], '</div>')
}
coldColors <- c(
`darkblue`   = "#0033a0",
`navyblue`   = "#0082C0",
`turquoise`   = "#00B1AC",
`green`   = "#00694E"
)
for (i in seq_along(coldColors)) {
cat('<div style="width: 100px; height: 100px; background-color:', coldColors[i],
'; display: flex; justify-content: center; align-items: center; color: white; margin: 10px; display: inline-block;">',
names(coldColors)[i], "<br>", coldColors[i],  '</div>')
}
ul_color("lajt")
set.seed(1)
n <- 100
age <- rnorm(n, mean = 35, sd = 5)
height <- rnorm(n, mean = 150 + 0.1 * age, sd = 5)
weight <- rnorm(n, mean = 100 + 0.5 * height - 1 * age, sd = 5)/2
SatisfactionLevels <- c("Highly Disagree", "Disagree", "Agree", "Highly Agree")
SatisfactionLevelsWithNeutral <- c("Highly Disagree", "Disagree", "Neutral", "Agree", "Highly Agree")
df <- data.frame(
respondent_id = 1:n,
country = sample(x = c("Slovenia", "Croatia", "Austria", "France"), n, replace = TRUE),
gender = sample(x = c("Male", "Female"), n, replace = TRUE),
height = height,
weight = weight,
age = age,
satisfaction = sample(SatisfactionLevels, n, replace = TRUE),
satisfactionWithNeutral = sample(SatisfactionLevelsWithNeutral, n, replace = TRUE)
)
df$satisfaction <- factor(df$satisfaction, levels = SatisfactionLevels)
df$satisfactionWithNeutral <- factor(df$satisfactionWithNeutral, levels = SatisfactionLevelsWithNeutral)
basicChart <- ggplot(df, aes(x = country)) +
geom_bar() +
geom_hline(yintercept = 5) +
labs(x = element_blank(),
y = "Frequency",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.")
basicChart
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA")
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red"))
basicChart <- ggplot(df, aes(x = country, y = height, fill = country)) +
facet_grid(.~gender) +
geom_boxplot(show.legend = FALSE) +
labs(y = "Sentiment", x = element_blank()) +
theme_ul(legend.justification = c(0, 1)) +
scale_y_continuous(labels = dollar_format(suffix=" cm",prefix="")) +
labs(x = element_blank(),
y = element_blank(),
title = "Height ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.")
basicChart + scale_fill_ul()
basicChart + scale_fill_ul("cold")
basicChart + scale_fill_ul("navyblue", reverse = TRUE)
basicChartCont <- ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1)) +
labs(x = "Age (years)",
y = "Height (cm)",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
color = "Weight")
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE, values = c(0, 0.8, 1))
ggplot(df, aes(y = country, fill = satisfaction)) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
geom_bar(position = position_fill(reverse = TRUE)) +
scale_fill_ul("redGreen") +
theme_ul(panel.background.fill = "white", panel.grid.major.color = "white") +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
basicChart <- ggplot(df, aes(y = country, fill = satisfactionWithNeutral)) +
geom_bar(position = position_fill(reverse = TRUE)) +
guides(fill = guide_legend(nrow = 1)) +
theme_ul() +
labs(fill = element_blank()) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
theme_ul(plot.background.fill = ul_color("lajt")) +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
basicChart + scale_fill_ul("redGreen")
ggplot(df, aes(y = country, fill = satisfactionWithNeutral)) +
geom_bar(position = position_fill(reverse = TRUE)) +
guides(fill = guide_legend(nrow = 1)) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
scale_fill_ul("redGreen", neutralColor = "lajt") +
theme_ul(legend.key = element_rect(color = ul_color("antracit"),
fill = "transparent"),
plot.background.fill = ul_color("lajt")) +
labs(fill = element_blank()) +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
ggplot(df, aes(y = country, fill = satisfactionWithNeutral)) +
geom_bar(position = position_fill(reverse = TRUE), color = ul_color("antracit")) +
guides(fill = guide_legend(nrow = 1)) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
scale_fill_ul("redGreen", neutralColor = "lajt") +
theme_ul(plot.background.fill = ul_color("lajt")) +
labs(fill = element_blank()) +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
ggplot(df, aes(y = country, fill = satisfactionWithNeutral)) +
geom_bar(position = position_fill(reverse = TRUE), color = ul_color("antracit")) +
guides(fill = guide_legend(nrow = 1)) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
scale_fill_ul("redGreen", neutralColor = "lajt") +
theme_ul(plot.background.fill = ul_color("lajt")) +
labs(fill = element_blank()) +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
basicChartCont + scale_color_ul(palette = "redGreen", discrete = FALSE)
basicChartCont + scale_color_ul(palette = "redGreen",
discrete = FALSE,
values = c(0,
scales::rescale(70, to = c(0, 1), from = range(df$weight)),
1))
coldColors <- c(
`darkblue`   = "#0033a0",
`navyblue`   = "#0082C0",
`turquoise`   = "#00B1AC",
`green`   = "#00694E"
)
for (i in seq_along(coldColors)) {
cat('<div style="width: 100px; height: 100px; background-color:', coldColors[i],
'; display: flex; justify-content: center; align-items: center; color: white; margin: 10px; display: inline-block;">',
names(coldColors)[i], "<br>", coldColors[i],  '</div>')
}
devtools::install(build_vignettes = TRUE)
install.packages("htmltools")
devtools::install(build_vignettes = TRUE)
remove.packages(“rlang”)
remove.packages("rlang")
install.packages("rlang")
library(rcmdcheck)
library(rlang)
remove.packages("rlang")
install.packages("rlang")
library(ggplot2)
library(ggplot2)
library(ggthemeUL)
