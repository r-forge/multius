geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red")) +
scale_x_discrete(labels = breakString())
label_dollar
dollar()
dollar
breakString <- function (x, nChar = 20, ...)
{
baseFunction <- function(x = x, nChar = nChar) {
x <- strsplit(x, " ")[[1]]
besedilo <- NULL
stevec <- 1
for (i in 1:length(x)) {
if (sum(nchar(besedilo)) >= nChar * stevec) {
besedilo <- paste(besedilo, "\n", x[i])
stevec <- stevec + 1
}
else {
besedilo <- paste(besedilo, x[i])
}
}
return(besedilo)
}
if (length(x) == 1) {
resitev <- baseFunction(x = x, nChar = nChar)
}
else {
resitev <- lapply(x, baseFunction, nChar = nChar)
}
return(unlist(resitev))
}
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red")) +
scale_x_discrete(labels = breakString())
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red")) +
scale_x_discrete(labels = breakString)
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red")) +
scale_x_discrete(labels = breakString(nChar = 5))
breakString <- function (x, nChar = 20, ...)
{
baseFunction <- function(x = x, nChar = nChar) {
x <- strsplit(x, " ")[[1]]
besedilo <- NULL
stevec <- 1
for (i in 1:length(x)) {
if (sum(nchar(besedilo)) >= nChar * stevec) {
besedilo <- paste(besedilo, "\n", x[i])
stevec <- stevec + 1
}
else {
besedilo <- paste(besedilo, x[i])
}
}
return(besedilo)
}
if (length(x) == 1) {
resitev <- baseFunction(x = x, nChar = nChar)
}
else {
resitev <- lapply(x, baseFunction, nChar = nChar)
}
return(unlist(resitev))
}
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red")) +
scale_x_discrete(labels = breakString(nChar = 5))
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
mtcars
ggplot(mtcars, aes(x = mpg, y = disp))
library(ggplot2)
ggplot(mtcars, aes(x = mpg, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul( element_text(color = "red")) + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul(text = element_text(color = "#58595b")) + labs(title = "ATTF")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul(text = element_text(color = "#58595b")) + labs(title = "ATTF")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
axis.text = element_text(colour = "#58595b"),
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul( element_text(color = "red")) + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul(text = element_text(color = "red")) + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
axis.text = element_text(colour = "#58595b"),
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul(text = element_text(color = "red")) + labs(title = "ATTF")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
text = text,
axis.text = element_text(colour = "#58595b"),
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul(text = element_text(color = "red")) + labs(title = "ATTF")
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
legend.key = legend.key,
#text elements
strip.text.x = element_text(colour = "#58595b"),
legend.position =  legend.position,
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
plot.caption = element_text(hjust = 1),
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point() + theme_ul() + labs(title = "ATTF")
theme_gray
library(ggplot2)
theme_gray
#' subtitle = "V-shape engines are typically larger",
#' caption = "Data source: Motor Trend US magazine.",
#' color = "1/4 mile time (seconds)",
#' size = "Weight (1000 lbs)") +
#' scale_color_ul(palette = "red", discrete = FALSE) +
#' theme_ul(plot.background.fill = ul_color("lajt"))
#' }
#' @importFrom ggplot2 element_rect theme_gray theme element_blank element_line element_text
#' @export
#' @seealso \code{\link[ggplot2]{theme}}
theme_ul <- function(legend.position = "top",
panel.background.fill = "#E8E9EA",
plot.background.fill = "white",
panel.grid.major.color = NULL,
legend.justification = c(0, 1),
legend.key = element_rect(fill = "transparent"),
text = element_text(colour = "#58595b"),
axis.text = element_text(colour = "#58595b"),
strip.text.x = element_text(colour = "#58595b"),
plot.caption = element_text(hjust = 1),
legend.title = element_text(face = "bold"),
axis.title = element_text(face="bold"),
plot.title = element_text(face="bold"),
plot.subtitle = element_text(hjust = 0),
legend.background = element_rect(fill=ul_color("transparent"), colour="transparent"),
...){
if (is.null(panel.grid.major.color)) {
panel.grid.major.color <- ifelse(panel.background.fill == "white", yes = "#E8E9EA", no = "white")
}
theme_gray()
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = panel.grid.major.color),
axis.ticks = element_blank(),
# legend
legend.justification = legend.justification,
legend.background = legend.background,
legend.key = legend.key,
#text elements
strip.text.x = strip.text.x,
legend.position =  legend.position,
legend.title = legend.title,
axis.title = axis.title,
plot.title = plot.title,
plot.subtitle = plot.subtitle,
plot.caption = plot.caption,
text = text,
axis.text = axis.text,
plot.background = element_rect(fill = plot.background.fill),
panel.background = element_rect(fill = panel.background.fill), ...
)
}
# install.packages("ggthemeUL", repos="http://R-Forge.R-project.org")
library(ggthemeUL)
library(ggplot2)
library(scales)
set.seed(1)
n <- 100
age <- rnorm(n, mean = 35, sd = 5)
height <- rnorm(n, mean = 150 + 0.1 * age, sd = 5)
weight <- rnorm(n, mean = 100 + 0.5 * height - 1 * age, sd = 5)/2
SatisfactionLevels <- c("Highly Disagree", "Disagree", "Agree", "Highly Agree")
SatisfactionLevelsWithNeutral <- c("Highly Disagree", "Disagree", "Neutral", "Agree", "Highly Agree")
df <- data.frame(
respondent_id = 1:n,
country = sample(x = c("Slovenia", "Croatia", "Austria", "France"), n, replace = TRUE),
gender = sample(x = c("Male", "Female"), n, replace = TRUE),
height = height,
weight = weight,
age = age,
satisfaction = sample(SatisfactionLevels, n, replace = TRUE),
satisfactionWithNeutral = sample(SatisfactionLevelsWithNeutral, n, replace = TRUE)
)
df$satisfaction <- factor(df$satisfaction, levels = SatisfactionLevels)
df$satisfactionWithNeutral <- factor(df$satisfactionWithNeutral, levels = SatisfactionLevelsWithNeutral)
basicChart <- ggplot(df, aes(x = country)) +
geom_bar() +
geom_hline(yintercept = 5) +
labs(x = element_blank(),
y = "Frequency",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.")
basicChart
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA")
basicChart +
geom_bar(fill = ul_color("navyblue")) +
geom_hline(yintercept = 5, color = ul_color("red")) +
theme_ul(plot.background.fill =  "#E8E9EA") +
theme(plot.title = element_text(color="red"))
basicChart <- ggplot(df, aes(x = country, y = height, fill = country)) +
facet_grid(.~gender) +
geom_boxplot(show.legend = FALSE) +
labs(y = "Sentiment", x = element_blank()) +
theme_ul(legend.justification = c(0, 1)) +
scale_y_continuous(labels = dollar_format(suffix=" cm",prefix="")) +
labs(x = element_blank(),
y = element_blank(),
title = "Height ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.")
basicChart + scale_fill_ul()
basicChart + scale_fill_ul("cold")
basicChart + scale_fill_ul("navyblue", reverse = TRUE)
basicChartCont <- ggplot(df, aes(x = age, y = height, color = weight)) +
geom_point(size = 5) +
theme_ul(legend.justification = c(0, 1)) +
labs(x = "Age (years)",
y = "Height (cm)",
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
color = "Weight")
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE)
basicChartCont + scale_color_ul(palette = "navyblue", discrete = FALSE, values = c(0, 0.8, 1))
df$country <- factor(df$country, levels = rev(c("Slovenia", "Croatia", "France", "Austria")))
ggplot(df, aes(y = country, fill = satisfaction)) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
geom_bar(position = position_fill(reverse = TRUE)) +
scale_fill_ul("redGreen") +
theme_ul(panel.background.fill = "white", panel.grid.major.color = "white") +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
basicChart <- ggplot(df, aes(y = country, fill = satisfactionWithNeutral)) +
geom_bar(position = position_fill(reverse = TRUE)) +
guides(fill = guide_legend(nrow = 1)) +
theme_ul() +
labs(fill = element_blank()) +
scale_x_continuous(labels = dollar_format(suffix=" %",prefix="", scale = 100)) +
theme_ul(plot.background.fill = ul_color("lajt")) +
labs(x = element_blank(),
y = element_blank(),
title = "Lorem ipsum dolor sit amet",
caption = "Data source: this is all fake data.",
subtitle = "Eiusmod tempor incididunt ut labore et dolore magna.",
fill = "Agreement")
devtools::document()
rm(list = c("scale_color_ul", "scale_fill_ul", "theme_ul", "ul_color", "ul_pal"))
devtools::document()
remove.packages("ggthemeUL")
