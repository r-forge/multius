res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = data[, which(names(data)==catVarName)],
interval = data[, which(names(data)==numVarNames[i])],
correct = TRUE), 2)}
}
i<-1
data <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
names(data)
data
data = mtcars
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
data <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = data[, numVarNames[i]], INDICES = data[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, numVarNames[i]] ~ as.factor(data[, catVarName]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = data[, which(names(data)==catVarName)],
interval = data[, which(names(data)==numVarNames[i])],
correct = TRUE), 2)}
}
data
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
?t.test
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 5 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 5 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
ifelse(hedgesG==TRUE, yes = "Hedges G", no = "")
ifelse(CI==TRUE, yes = "Hedges G", no = "")
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE, CI = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CF)*2 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CF) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
if (CF) labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
if (!CF) labele <- c(ravni, "t", "df", "p",  ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE, CI = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CI)*2 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CI) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
if (CI) labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
if (!CI) labele <- c(ravni, "t", "df", "p",  ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, CI = TRUE)
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, CI = TRUE, hedgesG = TRUE)
g <- function(ordinal, interval, correct = TRUE){
gs <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (correct == TRUE){
a <- length(interval) - 2
gs <- ((gamma(a/2))/(sqrt(a/2)*gamma((a-1)/2)))*gs
}
return(gs)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, CI = TRUE, hedgesG = TRUE)
hedgesG = TRUE
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
catVarName = "vs"
numVarNames = c("disp", "wt", "qsec")
data = mtcars
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CI)*2 + nravni + as.numeric(hedgesG))
CI <- TRUE
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CI)*2 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CI) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
}
i<-1
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CI) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
res[i, 7+nravni] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
ncol(res)
res[i, ncol(res)] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)}
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE, CI = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CI)*2 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CI) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
if (hedgesG) {
res[i, ncol(res)] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)
}
}
if (CI) labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
if (!CI) labele <- c(ravni, "t", "df", "p",  ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars)
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, hedgesG = TRUE)
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, hedgesG = TRUE, CI = TRUE)
report.ttest(catVarName = "vs", numVarNames = c("disp", "wt", "qsec"), data = mtcars, hedgesG = FALSE, CI = TRUE)
devtools::build_manual()
library(rcmdcheck)
devtools::build_manual()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(handyReport)
remove.packages("handyReport")
devtools::document()
devtools::document()
devtools::document()
#' @examples
#' data <- data.frame(A = factor(c(1, 2, 3, 2), ordered = TRUE),
#'                    B = c(1.2, 3.4, 5.6, 4.3),
#'                    C = c(2.1, 4.3, 5.6, 3.2))
#' catVarName <- "A"
#' numVarNames <- c("B", "C")
#' report.anova(catVarName, numVarNames, data, omegaSq = TRUE)
#' @author Marjan Cugmas
#' @importFrom stats t.test aov chisq.test oneway.test sd t.test
#' @export
report.anova <- function(catVarName, numVarNames, data, omegaSq = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 4 + nravni + as.numeric(omegaSq==TRUE))
for (i in 1:length(numVarNames)) {
data <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = data[, numVarNames[i]], INDICES = data[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- oneway.test(data[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- model$parameter[1]
res[i, 3+nravni] <- round(model$parameter[2])
res[i, 4+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (omegaSq == TRUE) {
modelAov <- summary(aov(data[, numVarNames[i]] ~ as.factor(data[, catVarName])))
res[i, 4+nravni+  as.numeric(omegaSq==TRUE)] <- round((modelAov[[1]][1,2] - modelAov[[1]][1,1]*(modelAov[[1]][2,3]))/(modelAov[[1]][1,2] + modelAov[[1]][2,2] + modelAov[[1]][2,3]), 2)
}
}
labele <- c(ravni, "F", "df1", "df2", "p")
if (omegaSq==TRUE) labele <- c(labele, "Omega Sq")
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
mtcars
report.anova(catVarName = "gear", numVarNames = "mpg", data = mtcars, omegaSq = TRUE)
report.anova(catVarName = "gear", numVarNames = c("mpg", wt), data = mtcars, omegaSq = TRUE)
report.anova(catVarName = "gear", numVarNames = c("mpg", "wt"), data = mtcars, omegaSq = TRUE)
report.anova(catVarName = "gear", numVarNames = c("mpg", "wt"), data = mtcars)
data = mtcars
numVarNames = c("mpg", "wt")
catVarName = "gear"
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 4 + nravni + as.numeric(omegaSq==TRUE))
omegaSq = FALSE
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 4 + nravni + as.numeric(omegaSq==TRUE))
for (i in 1:length(numVarNames)) {
data <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = data[, numVarNames[i]], INDICES = data[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- oneway.test(data[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- model$parameter[1]
res[i, 3+nravni] <- round(model$parameter[2])
res[i, 4+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (omegaSq == TRUE) {
modelAov <- summary(aov(data[, numVarNames[i]] ~ as.factor(data[, catVarName])))
res[i, 4+nravni+  as.numeric(omegaSq==TRUE)] <- round((modelAov[[1]][1,2] - modelAov[[1]][1,1]*(modelAov[[1]][2,3]))/(modelAov[[1]][1,2] + modelAov[[1]][2,2] + modelAov[[1]][2,3]), 2)
}
}
i<-1
data <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
#' @examples
#' data <- data.frame(A = factor(c(1, 2, 3, 2), ordered = TRUE),
#'                    B = c(1.2, 3.4, 5.6, 4.3),
#'                    C = c(2.1, 4.3, 5.6, 3.2))
#' catVarName <- "A"
#' numVarNames <- c("B", "C")
#' report.anova(catVarName, numVarNames, data, omegaSq = TRUE)
#' @author Marjan Cugmas
#' @importFrom stats t.test aov chisq.test oneway.test sd t.test
#' @export
report.anova <- function(catVarName, numVarNames, data, omegaSq = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 4 + nravni + as.numeric(omegaSq==TRUE))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- oneway.test(tmp[, numVarNames[i]] ~ as.factor(tmp[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- model$parameter[1]
res[i, 3+nravni] <- round(model$parameter[2])
res[i, 4+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (omegaSq == TRUE) {
modelAov <- summary(aov(tmp[, numVarNames[i]] ~ as.factor(tmp[, catVarName])))
res[i, 4+nravni+  as.numeric(omegaSq==TRUE)] <- round((modelAov[[1]][1,2] - modelAov[[1]][1,1]*(modelAov[[1]][2,3]))/(modelAov[[1]][1,2] + modelAov[[1]][2,2] + modelAov[[1]][2,3]), 2)
}
}
labele <- c(ravni, "F", "df1", "df2", "p")
if (omegaSq==TRUE) labele <- c(labele, "Omega Sq")
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.anova(catVarName = "gear", numVarNames = c("mpg", "wt"), data = mtcars, omegaSq = TRUE)
report.anova(catVarName = "gear", numVarNames = c("mpg", "wt"), data = mtcars, omegaSq = FALSE)
devtools::document()
report.ttest <- function(catVarName, numVarNames, data, hedgesG = FALSE, CI = FALSE){
if (is.factor(data[, which(names(data)==catVarName)]) == FALSE){
data[, which(names(data)==catVarName)] <- as.factor(data[, which(names(data)==catVarName)])
}
if (length(catVarName) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(data[, which(names(data)==catVarName)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(numVarNames), ncol = 3 + as.numeric(CI)*2 + nravni + as.numeric(hedgesG))
for (i in 1:length(numVarNames)) {
tmp <- data[, c(which(names(data)==catVarName),  which(names(data)==numVarNames[i]))]
means <- round(as.vector(by(data = tmp[, numVarNames[i]], INDICES = tmp[, catVarName], mean, na.rm = TRUE)), 2)
res[i, 1:nravni] <- means
model <- t.test(tmp[, numVarNames[i]] ~ as.factor(data[, catVarName]), var.equal = FALSE)
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- ifelse(model$p.value < 0.001, yes = "< 0.01", no = round(model$p.value, 3))
if (CI) {
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
}
if (hedgesG) {
res[i, ncol(res)] <- round(g(ordinal = tmp[, which(names(tmp)==catVarName)],
interval = tmp[, which(names(tmp)==numVarNames[i])],
correct = TRUE), 2)
}
}
if (CI) labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
if (!CI) labele <- c(ravni, "t", "df", "p",  ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- numVarNames
return(res)
}
report.ttest("species", c("sepal.length", "sepal.width"), iris, hedgesG = TRUE, CI = TRUE)
iris
mtcars
report.ttest(catVarName = "am", c("mpg", "disp"), mtcars, hedgesG = TRUE, CI = TRUE)
devtools::document()
