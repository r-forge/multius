{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.3.2 (2023-10-31 ucrt) -- \"Eye Holes\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for",
        " some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "report.freqTab <- function(catVarName,",
        "+ ",
        "                           data,",
        "+ ",
        "                           dec = 2,",
        "+ ",
        "                           dec.freq = 0,",
        "+ ",
        "                           cumulative = FALSE,",
        "+ ",
        "                           useNA = \"always\",",
        "+ ",
        "                           language = \"english\",",
        "+ ",
        "                           total.row = TRUE){",
        "+ ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "+ ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  cumFreqValid <- cumsum(tblValid)",
        "+ ",
        "  percValid <- tblValid/sum(tblValid) * 100",
        "+ ",
        "  cumPercValid <- cumsum(percValid)",
        "+ ",
        "+ ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    percValid <- round(percValid, dec)",
        "+ ",
        "    cumPercValid <- round(cumPercValid, dec)",
        "+ ",
        "  }",
        "+ ",
        "  frekValid <- as.data.frame(cbind(\"Category\" = names(tblValid), \"Valid %\" = percValid, \"Valid Cum. %\" = cumPercValid), stringsAsFactors = FALSE)",
        "+ ",
        "+ ",
        "  if (useNA != \"no\"){",
        "+ ",
        "    frekValid <- rbind(frekValid, c(NA,0,0))",
        "+ ",
        "    if (!utezi) {",
        "+ ",
        "      tbl <- table(data[, catVarName], useNA = useNA)",
        "+ ",
        "    } else {tbl <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data, addNA = TRUE, na.action = \"na.pass\"), dec.freq)}",
        "+ ",
        "  }",
        "+ ",
        "  if (useNA == \"no\") {",
        "+ ",
        "    tbl <- tblValid",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  cumFreq <- cumsum(tbl)",
        "+ ",
        "  perc <- tbl/sum(tbl) * 100",
        "+ ",
        "  cumPerc <- cumsum(perc)",
        "+ ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    perc <- round(perc, dec)",
        "+ ",
        "    cumPerc <- round(cumPerc, dec)",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  frekTab <- as.data.frame(cbind(\"Category\" = names(tbl),  \"Freq.\" = tbl, \"Cum. Freq.\" = cumFreq, \"%\" = perc, \"Cum. %\" = cumPerc), stringsAsFactors = FALSE)",
        "+ ",
        "+ ",
        "  freqTab <- merge(frekTab, frekValid, by = \"Category\", all = TRUE, sort = FALSE)",
        "+ ",
        "  freqTab[is.na(freqTab$Category), \"Category\"] <- \"Missing value\"",
        "+ ",
        "  freqTab[is.na(freqTab)] <- \"\"",
        "+ ",
        "+ ",
        "  pogoj1 <- useNA == \"no\"",
        "+ ",
        "  pogoj2 <- useNA == \"ifany\"",
        "+ ",
        "  pogojTmp <- freqTab[freqTab$Category%in%\"Missing value\", \"Valid Cum. %\"]==0",
        "+ ",
        "  pogoj3 <- ifelse(length(pogojTmp)==0, no = pogojTmp, yes = TRUE)",
        "+ ",
        "+ ",
        "  if (pogoj1 | (pogoj2&pogoj3)) {",
        "+ ",
        "    freqTab <- freqTab[,-which(colnames(freqTab) %in% c(\"Valid %\", \"Valid Cum. %\"))]",
        "+ ",
        "    freqTab <- freqTab[!(freqTab$Category %in% \"Missing value\"),]",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if (cumulative == FALSE) freqTab <- freqTab[, -which(colnames(freqTab) %in% c(\"Cum. Freq.\", \"Cum. %\", \"Valid Cum. %\"))]",
        "+ ",
        "+ ",
        "  if (total.row) {",
        "+ ",
        "    freqTab <- rbind(freqTab, c(\"Total\", rep(NA, times = ncol(freqTab)-1)))",
        "+ ",
        "    for (i in c(\"Freq.\", \"%\", \"Valid %\")) {",
        "+ ",
        "      if (i %in% colnames(frekTab)) {",
        "+ ",
        "+ ",
        "        vsota <- sum(as.numeric(freqTab[,i]), na.rm = TRUE)",
        "+ ",
        "        if (i %in% c(\"%\", \"Valid %\")) vsota <- formatC(round(vsota), format = \"f\", digits = dec)",
        "+ ",
        "+ ",
        "        freqTab[freqTab$Category %in% \"Total\", i] <- vsota",
        "+ ",
        "      }",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if (language %in% c(\"Slovene\", \"slovene\", \"slo\", \"s\")) {",
        "+ ",
        "    if (total.row) freqTab[freqTab$Category %in% \"Total\", \"Category\"] <- \"Skupaj\"",
        "+ ",
        "    freqTab[freqTab$Category %in% \"Missing value\", \"Category\"] <- \"Manjkajo\\u010da vrednost\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Category\"] <- \"Kategorija\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Freq.\"] <- \"Frekvenca\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Cum. Freq.\"] <- \"Kumulativna frekvenca\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"%\"] <- \"Dele\\u017e\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Cum. %\"] <- \"Kumulativni dele\\u017e\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Valid %\"] <- \"Veljavni dele\\u017e\"",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  freqTab[is.na(freqTab)] <- \"\"",
        "+ ",
        "+ ",
        "  return(freqTab)",
        "+ ",
        "}",
        "> ",
        "report.freqTab(catVarName = \"gear\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             3    15  46.88   46.88\n2             4    12   37.5    37.5\n3             5     5  15.62   15.62\n4 Missing value     0      0       0\n5         Total    32 100.00        \n",
        "> ",
        "mtcars",
        "                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 3",
        "60          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC     ",
        "    15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5",
        "   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95",
        ".1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n",
        "> ",
        "report.freqTab(catVarName = \"disp\", dec = 2, useNA = \"always\", data = mtcars)",
        "        Category Freq.      % Valid %\n1           71.1     1   3.12    3.12\n2           75.7     1   3.12    3.12\n3           78.7     1   3.12    3.12\n4             79     1   3.12    3.12\n5           95.1     1   3.12    3.12\n6            108     1   3.12    3.12\n7          120.1     1   3.12    3.12\n8          120.3     1   3.12    3.12\n9            121     1   3.12    3.12\n10         140.8     1   3.12    3.12\n11           145     1   3.12    3.12\n12         146.7     1   3.12    3.12\n13           160  ",
        "   2   6.25    6.25\n14         167.6     2   6.25    6.25\n15           225     1   3.12    3.12\n16           258     1   3.12    3.12\n17         275.8     3   9.38    9.38\n18           301     1   3.12    3.12\n19           304     1   3.12    3.12\n20           318     1   3.12    3.12\n21           350     1   3.12    3.12\n22           351     1   3.12    3.12\n23           360     2   6.25    6.25\n24           400     1   3.12    3.12\n25           440     1   3.12    3.12\n26           460     1   3.12    3.1",
        "2\n27           472     1   3.12    3.12\n28 Missing value     0      0       0\n29         Total    32 100.00        \n",
        "> ",
        "mtcars",
        "                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 3",
        "60          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC     ",
        "    15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5",
        "   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95",
        ".1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n",
        "> ",
        "report.freqTab(catVarName = \"gear\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             3    15  46.88   46.88\n2             4    12   37.5    37.5\n3             5     5  15.62   15.62\n4 Missing value     0      0       0\n5         Total    32 100.00        \n",
        "> ",
        "report.freqTab(catVarName = \"carb\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             1     7  21.88   21.88\n2             2    10  31.25   31.25\n3             3     3   9.38    9.38\n4             4    10  31.25   31.25\n5             6     1   3.12    3.12\n6             8     1   3.12    3.12\n7 Missing value     0      0       0\n8         Total    32 100.00        \n",
        "> ",
        "mtcars$carb[10]<-NA",
        "> ",
        "report.freqTab(catVarName = \"carb\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             1     7  21.88   22.58\n2             2    10  31.25   32.26\n3             3     3   9.38    9.68\n4             4     9  28.12   29.03\n5             6     1   3.12    3.23\n6             8     1   3.12    3.23\n7 Missing value     1   3.12       0\n8         Total    32 100.00        \n",
        "> ",
        "mtcars$carb[c(1, 2, 3, 5)]<-NA",
        "> ",
        "report.freqTab(catVarName = \"carb\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             1     6  18.75   22.22\n2             2     9  28.12   33.33\n3             3     3   9.38   11.11\n4             4     7  21.88   25.93\n5             6     1   3.12     3.7\n6             8     1   3.12     3.7\n7 Missing value     5  15.62       0\n8         Total    32 100.00        \n",
        "> ",
        "data <- mtcars",
        "> ",
        "dec = 2",
        "> ",
        "dec.freq = 0",
        "> ",
        "cumulative = FALSE",
        "> ",
        "useNA = \"always\"",
        "> ",
        "language = \"english\"",
        "> ",
        " sort.cat = FALSE",
        "> ",
        "total.row = TRUE",
        "> ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "> ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "Error: object 'catVarName' not found\n",
        "> ",
        "catVarName<-\"carb\"",
        "> ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "> ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "> ",
        "  cumFreqValid <- cumsum(tblValid)",
        "> ",
        "  percValid <- tblValid/sum(tblValid) * 100",
        "> ",
        "  cumPercValid <- cumsum(percValid)",
        "> ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    percValid <- round(percValid, dec)",
        "+ ",
        "    cumPercValid <- round(cumPercValid, dec)",
        "+ ",
        "  }",
        "> ",
        "  frekValid <- as.data.frame(cbind(\"Category\" = names(tblValid), \"Valid %\" = percValid, \"Valid Cum. %\" = cumPercValid), stringsAsFactors = FALSE)",
        "> ",
        "frekValid",
        "  Category Valid % Valid Cum. %\n1        1   22.22        22.22\n2        2   33.33        55.56\n3        3   11.11        66.67\n4        4   25.93        92.59\n6        6     3.7         96.3\n8        8     3.7          100\n",
        "> ",
        "frekValid",
        "  Category Valid % Valid Cum. %\n1        1   22.22        22.22\n2        2   33.33        55.56\n3        3   11.11        66.67\n4        4   25.93        92.59\n6        6     3.7         96.3\n8        8     3.7          100\n",
        "> ",
        "frekValid",
        "  Category Valid % Valid Cum. %\n1        1   22.22        22.22\n2        2   33.33        55.56\n3        3   11.11        66.67\n4        4   25.93        92.59\n6        6     3.7         96.3\n8        8     3.7          100\n",
        "> ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "> ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "> ",
        "  cumFreqValid <- cumsum(tblValid)",
        "> ",
        "  percValid <- tblValid/sum(tblValid) * 100",
        "> ",
        "  cumPercValid <- cumsum(percValid)",
        "> ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    percValid <- round(percValid, dec)",
        "+ ",
        "    cumPercValid <- round(cumPercValid, dec)",
        "+ ",
        "  }",
        "> ",
        "  frekValid <- as.data.frame(cbind(\"Category\" = names(tblValid), \"Valid %\" = percValid, \"Valid Cum. %\" = cumPercValid), stringsAsFactors = FALSE)",
        "> ",
        "frekValid",
        "  Category Valid % Valid Cum. %\n1        1   22.22        22.22\n2        2   33.33        55.56\n3        3   11.11        66.67\n4        4   25.93        92.59\n6        6     3.7         96.3\n8        8     3.7          100\n",
        "> ",
        "cumFreqValid",
        " 1  2  3  4  6  8 \n 6 15 18 25 26 27 \n",
        "> ",
        "percValid",
        "\n    1     2     3     4     6     8 \n22.22 33.33 11.11 25.93  3.70  3.70 \n",
        "> ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "> ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "> ",
        "tblValid",
        "\n1 2 3 4 6 8 \n6 9 3 7 1 1 \n",
        "> ",
        "tblValid",
        "\n1 2 3 4 6 8 \n6 9 3 7 1 1 \n",
        "> ",
        "sort(tblValid)",
        "\n6 8 3 1 4 2 \n1 1 3 6 7 9 \n",
        "> ",
        "sort(tblValid, decreasing = TRUE)",
        "\n2 4 1 3 6 8 \n9 7 6 3 1 1 \n",
        "> ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "> ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "> ",
        "  if (sort.cat == \"freq\") tblValid <- sort(tblValid, decreasing = TRUE)",
        "> ",
        "  cumFreqValid <- cumsum(tblValid)",
        "> ",
        "report.freqTab <- function(catVarName,",
        "+ ",
        "                           data,",
        "+ ",
        "                           dec = 2,",
        "+ ",
        "                           dec.freq = 0,",
        "+ ",
        "                           cumulative = FALSE,",
        "+ ",
        "                           useNA = \"always\",",
        "+ ",
        "                           language = \"english\",",
        "+ ",
        "                           sort.cat = FALSE,",
        "+ ",
        "                           total.row = TRUE){",
        "+ ",
        "  utezi <- any(class(data) %in% c(\"survey.design2\", \"survey.design\"))",
        "+ ",
        "  if (!utezi) {",
        "+ ",
        "    if (is.factor(data[, catVarName]) == FALSE) data[, catVarName] <- as.factor(data[, catVarName])",
        "+ ",
        "    tblValid <- table(data[, catVarName])",
        "+ ",
        "  } else {",
        "+ ",
        "    tblValid <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data), dec.freq)",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if (sort.cat == \"freq\") tblValid <- sort(tblValid, decreasing = TRUE)",
        "+ ",
        "+ ",
        "  cumFreqValid <- cumsum(tblValid)",
        "+ ",
        "  percValid <- tblValid/sum(tblValid) * 100",
        "+ ",
        "  cumPercValid <- cumsum(percValid)",
        "+ ",
        "+ ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    percValid <- round(percValid, dec)",
        "+ ",
        "    cumPercValid <- round(cumPercValid, dec)",
        "+ ",
        "  }",
        "+ ",
        "  frekValid <- as.data.frame(cbind(\"Category\" = names(tblValid), \"Valid %\" = percValid, \"Valid Cum. %\" = cumPercValid), stringsAsFactors = FALSE)",
        "+ ",
        "+ ",
        "  if (useNA != \"no\"){",
        "+ ",
        "    frekValid <- rbind(frekValid, c(NA,0,0))",
        "+ ",
        "    if (!utezi) {",
        "+ ",
        "      tbl <- table(data[, catVarName], useNA = useNA)",
        "+ ",
        "    } else {tbl <- round(survey::svytable(stats::as.formula(paste(\"~\", catVarName)), data, addNA = TRUE, na.action = \"na.pass\"), dec.freq)}",
        "+ ",
        "  }",
        "+ ",
        "  if (useNA == \"no\") {",
        "+ ",
        "    tbl <- tblValid",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  cumFreq <- cumsum(tbl)",
        "+ ",
        "  perc <- tbl/sum(tbl) * 100",
        "+ ",
        "  cumPerc <- cumsum(perc)",
        "+ ",
        "  if (!is.null(dec)) {",
        "+ ",
        "    perc <- round(perc, dec)",
        "+ ",
        "    cumPerc <- round(cumPerc, dec)",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  frekTab <- as.data.frame(cbind(\"Category\" = names(tbl),  \"Freq.\" = tbl, \"Cum. Freq.\" = cumFreq, \"%\" = perc, \"Cum. %\" = cumPerc), stringsAsFactors = FALSE)",
        "+ ",
        "+ ",
        "  freqTab <- merge(frekTab, frekValid, by = \"Category\", all = TRUE, sort = FALSE)",
        "+ ",
        "  freqTab[is.na(freqTab$Category), \"Category\"] <- \"Missing value\"",
        "+ ",
        "  freqTab[is.na(freqTab)] <- \"\"",
        "+ ",
        "+ ",
        "  pogoj1 <- useNA == \"no\"",
        "+ ",
        "  pogoj2 <- useNA == \"ifany\"",
        "+ ",
        "  pogojTmp <- freqTab[freqTab$Category%in%\"Missing value\", \"Valid Cum. %\"]==0",
        "+ ",
        "  pogoj3 <- ifelse(length(pogojTmp)==0, no = pogojTmp, yes = TRUE)",
        "+ ",
        "+ ",
        "  if (pogoj1 | (pogoj2&pogoj3)) {",
        "+ ",
        "    freqTab <- freqTab[,-which(colnames(freqTab) %in% c(\"Valid %\", \"Valid Cum. %\"))]",
        "+ ",
        "    freqTab <- freqTab[!(freqTab$Category %in% \"Missing value\"),]",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if (cumulative == FALSE) freqTab <- freqTab[, -which(colnames(freqTab) %in% c(\"Cum. Freq.\", \"Cum. %\", \"Valid Cum. %\"))]",
        "+ ",
        "+ ",
        "  if (total.row) {",
        "+ ",
        "    freqTab <- rbind(freqTab, c(\"Total\", rep(NA, times = ncol(freqTab)-1)))",
        "+ ",
        "    for (i in c(\"Freq.\", \"%\", \"Valid %\")) {",
        "+ ",
        "      if (i %in% colnames(frekTab)) {",
        "+ ",
        "+ ",
        "        vsota <- sum(as.numeric(freqTab[,i]), na.rm = TRUE)",
        "+ ",
        "        if (i %in% c(\"%\", \"Valid %\")) vsota <- formatC(round(vsota), format = \"f\", digits = dec)",
        "+ ",
        "+ ",
        "        freqTab[freqTab$Category %in% \"Total\", i] <- vsota",
        "+ ",
        "      }",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if (language %in% c(\"Slovene\", \"slovene\", \"slo\", \"s\")) {",
        "+ ",
        "    if (total.row) freqTab[freqTab$Category %in% \"Total\", \"Category\"] <- \"Skupaj\"",
        "+ ",
        "    freqTab[freqTab$Category %in% \"Missing value\", \"Category\"] <- \"Manjkajo\\u010da vrednost\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Category\"] <- \"Kategorija\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Freq.\"] <- \"Frekvenca\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Cum. Freq.\"] <- \"Kumulativna frekvenca\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"%\"] <- \"Dele\\u017e\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Cum. %\"] <- \"Kumulativni dele\\u017e\"",
        "+ ",
        "    colnames(freqTab)[colnames(freqTab) %in% \"Valid %\"] <- \"Veljavni dele\\u017e\"",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  freqTab[is.na(freqTab)] <- \"\"",
        "+ ",
        "+ ",
        "  return(freqTab)",
        "+ ",
        "}",
        "> ",
        "report.freqTab(catVarName = \"carb\", dec = 2, useNA = \"always\", data = mtcars)",
        "       Category Freq.      % Valid %\n1             1     6  18.75   22.22\n2             2     9  28.12   33.33\n3             3     3   9.38   11.11\n4             4     7  21.88   25.93\n5             6     1   3.12     3.7\n6             8     1   3.12     3.7\n7 Missing value     5  15.62       0\n8         Total    32 100.00        \n",
        "> ",
        "report.freqTab(catVarName = \"carb\", dec = 2, useNA = \"always\", data = mtcars, sort.cat = \"freq\")",
        "       Category Freq.      % Valid %\n1             1     6  18.75   22.22\n2             2     9  28.12   33.33\n3             3     3   9.38   11.11\n4             4     7  21.88   25.93\n5             6     1   3.12     3.7\n6             8     1   3.12     3.7\n7 Missing value     5  15.62       0\n8         Total    32 100.00        \n\nRestarting R session...\n\n"
    ]
}